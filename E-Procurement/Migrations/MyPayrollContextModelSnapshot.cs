// <auto-generated />
using System;
using E_Procurement.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace E_Procurement.Migrations
{
    [DbContext(typeof(MyPayrollContext))]
    partial class MyPayrollContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("E_Procurement.Models.AspNetRoleClaims", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("E_Procurement.Models.AspNetRoles", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("E_Procurement.Models.AspNetUserClaims", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("E_Procurement.Models.AspNetUserLogins", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("E_Procurement.Models.AspNetUserRoles", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("E_Procurement.Models.AspNetUserTokens", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("E_Procurement.Models.AspNetUsers", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("E_Procurement.Models.Bank", b =>
                {
                    b.Property<int>("BankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BankID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankName")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime?>("LastChanged")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("BankId");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasName("IX_Bank");

                    b.ToTable("Bank");
                });

            modelBuilder.Entity("E_Procurement.Models.BankBranch", b =>
                {
                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BranchID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BankId")
                        .HasColumnName("BankID")
                        .HasColumnType("int");

                    b.Property<string>("BranchCode")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("BranchName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("LastChanged")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("BranchId");

                    b.HasIndex("BankId");

                    b.HasIndex("BranchCode")
                        .IsUnique()
                        .HasName("IX_BankBranch")
                        .HasFilter("[BranchCode] IS NOT NULL");

                    b.ToTable("BankBranch");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfAdmin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Active")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fname")
                        .HasColumnName("FName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lname")
                        .HasColumnName("LName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrganizationId")
                        .HasColumnName("Organization_Id")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cdf_Admin");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfAsset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Asset")
                        .HasColumnName("asset")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("AssetType")
                        .HasColumnName("asset_type")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("CreatedBy")
                        .HasColumnName("createdBy")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dateCreated")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("CDF_Asset");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfAssetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssetType")
                        .HasColumnName("assetType")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("CreatedBy")
                        .HasColumnName("createdBy")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createdDate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("CDF_AssetType");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfBid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dateCreated")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Details")
                        .HasColumnName("details")
                        .HasColumnType("varchar(350)")
                        .HasMaxLength(350)
                        .IsUnicode(false);

                    b.Property<int?>("SupplierId")
                        .HasColumnName("supplierID")
                        .HasColumnType("int");

                    b.Property<int?>("TenderId")
                        .HasColumnName("tenderID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CDF_Bid");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfBudget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BudgetName")
                        .HasColumnName("budgetName")
                        .HasColumnType("varchar(300)")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<int?>("BudgetYear")
                        .HasColumnName("budgetYear")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("createdBy")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createdDate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Period")
                        .HasColumnName("period")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("CDF_Budget");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfBudgetExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Amount")
                        .IsRequired()
                        .HasColumnName("amount")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("BudgetId")
                        .HasColumnName("budget_id")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("code")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Currency")
                        .HasColumnName("currency")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("description")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("CDF_BudgetExpense");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfBudgetPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BudgetId")
                        .HasColumnName("budget_id")
                        .HasColumnType("int");

                    b.Property<string>("Period")
                        .HasColumnName("period")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("CDF_BudgetPeriod");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfBudgetRevenue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Amount")
                        .HasColumnName("amount")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("BudgetId")
                        .HasColumnName("budget_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createdDate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Currency")
                        .HasColumnName("currency")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("CDF_BudgetRevenue");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfCompanyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyType")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("CDF_CompanyType");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfConstituency", b =>
                {
                    b.Property<string>("Constituency")
                        .HasColumnName("constituency")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Country")
                        .HasColumnName("country")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Latitude")
                        .HasColumnName("latitude")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Longitude")
                        .HasColumnName("longitude")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Province")
                        .HasColumnName("province")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.ToTable("CDF_Constituency");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfConstituency1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Constituency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CdfConstituency");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dateCreated")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Department")
                        .HasColumnName("department")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("CDF_Department");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfEvaluationmethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createdDate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Method")
                        .HasColumnName("method")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("CDF_EVALUATIONMETHOD");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfExpenseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnName("createdBy")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createdDate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ExpenseType")
                        .HasColumnName("expenseType")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("CDF_ExpenseType");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfFund", b =>
                {
                    b.Property<string>("Amount")
                        .HasColumnName("amount")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_date")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Currency")
                        .HasColumnName("currency")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CurrencyCode")
                        .HasColumnName("currency_code")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Fund")
                        .HasColumnName("fund")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.ToTable("CDF_Fund");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfFund1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Amount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fund")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CdfFund");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfIdentityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnName("type")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.ToTable("CDF_IdentityType");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfIdentityType1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CdfIdentityType");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfLevels", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dateCreated")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("LevelInOrganization")
                        .HasColumnName("levelInOrganization")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfUsers")
                        .HasColumnName("numberOfUsers")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CDF_Levels");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfOrganization", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120)
                        .IsUnicode(false);

                    b.Property<string>("Activated")
                        .HasColumnName("activated")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_created")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("FirstAdminEmail")
                        .HasColumnName("first_Admin_Email")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("FirstAdminId")
                        .HasColumnName("first_Admin_ID")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("FirstAdminIdentityType")
                        .HasColumnName("first_Admin_Identity_Type")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("FirstAdminPhone")
                        .HasColumnName("first_Admin_Phone")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Logo")
                        .HasColumnName("logo")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Name");

                    b.ToTable("CDF_ORGANIZATION");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfOrganization1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Activated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstAdminEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstAdminId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstAdminIdentityType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstAdminPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstAdminUsername")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<byte[]>("Logo")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CdfOrganization");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfOrganizationActivation", b =>
                {
                    b.Property<int?>("Activation")
                        .HasColumnName("activation")
                        .HasColumnType("int");

                    b.Property<int?>("ActivationCode")
                        .HasColumnName("activationCode")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OrganizationId")
                        .HasColumnName("organization_id")
                        .HasColumnType("int");

                    b.ToTable("CDF_OrganizationActivation");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfOrganizationbranches", b =>
                {
                    b.Property<string>("BranchAddress")
                        .HasColumnName("branchAddress")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("BranchName")
                        .HasColumnName("branchName")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.ToTable("CDF_ORGANIZATIONBRANCHES");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfOrganizationdepartments", b =>
                {
                    b.Property<int?>("DepartmentHeadJobId")
                        .HasColumnName("departmentHeadJobID")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentName")
                        .HasColumnName("departmentName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.ToTable("CDF_ORGANIZATIONDEPARTMENTS");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfOrganizationjobs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OrganizationGrade")
                        .HasColumnName("organization_grade")
                        .HasColumnType("int");

                    b.Property<int?>("OrganizationId")
                        .HasColumnName("organization_id")
                        .HasColumnType("int");

                    b.Property<int?>("OrganizationLevel")
                        .HasColumnName("organization_level")
                        .HasColumnType("int");

                    b.Property<string>("OrganizationTitle")
                        .HasColumnName("organization_title")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<int?>("Strength")
                        .HasColumnName("strength")
                        .HasColumnType("int");

                    b.ToTable("CDF_ORGANIZATIONJOBS");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfOrganizationprofile", b =>
                {
                    b.Property<string>("CompanyAddress")
                        .HasColumnName("companyAddress")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("CompanyEmail")
                        .HasColumnName("companyEmail")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("CompanyName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CompanyWebsite")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("int");

                    b.Property<string>("LegalName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("OrganizationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("organization_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.ToTable("CDF_ORGANIZATIONPROFILE");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfPermission", b =>
                {
                    b.Property<DateTime?>("DateCreated")
                        .HasColumnName("dateCreated")
                        .HasColumnType("datetime");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Permission")
                        .HasColumnName("permission")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.ToTable("CDF_Permission");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfPlanItems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Award")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<decimal?>("Budget")
                        .HasColumnName("budget")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<string>("Class")
                        .HasColumnName("class")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Comments")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("CreatedBy")
                        .HasColumnName("createdBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Description")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Prequalification")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("ProcPlanId")
                        .HasColumnName("procPlanID")
                        .HasColumnType("int");

                    b.Property<string>("ProcurementMethod")
                        .HasColumnName("procurement_method")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ProjectCode")
                        .HasColumnName("Project_Code")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Publication")
                        .HasColumnName("publication")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("Quantity")
                        .HasColumnName("quantity")
                        .HasColumnType("int");

                    b.Property<string>("RefNo")
                        .HasColumnName("Ref_No")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("SourceOfFunds")
                        .HasColumnName("source_of_funds")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("Start")
                        .HasColumnType("datetime");

                    b.Property<string>("Typeofentry")
                        .HasColumnName("typeofentry")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Unitofmeasure")
                        .HasColumnName("unitofmeasure")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Unspsc")
                        .HasColumnName("UNSPSC")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("CDF_PlanItems");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfProcPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .HasColumnName("comments")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("EntityId")
                        .HasColumnName("entityID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnName("modified")
                        .HasColumnType("datetime");

                    b.Property<int?>("Version")
                        .HasColumnName("version")
                        .HasColumnType("int");

                    b.Property<string>("Year")
                        .HasColumnName("year")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("CDF_ProcPlan");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfProcurement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Method")
                        .HasColumnName("method")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int?>("NumberOfBidders")
                        .HasColumnName("numberOfBidders")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CDF_Procurement");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfProcurementEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("EntityName")
                        .HasColumnName("entityName")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Type")
                        .HasColumnName("type")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("CDF_ProcurementEntity");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfProcurementEntityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnName("type")
                        .HasColumnType("varchar(300)")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("CDF_ProcurementEntityType");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnName("createdBy")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dateCreated")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("LevelId")
                        .HasColumnName("levelID")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .HasColumnName("role")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("CDF_Role");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Role")
                        .HasColumnName("role")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Status")
                        .HasColumnName("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CDF_Roles");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfRoles1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CdfRoles");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfServices", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnName("createdBy")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createdDate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Service")
                        .HasColumnName("service")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("CDF_Services");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfStatus", b =>
                {
                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_created")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status")
                        .HasColumnName("status")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.ToTable("CDF_Status");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfStatus1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CdfStatus");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnName("createdBy")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createdDate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Stock")
                        .HasColumnName("stock")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("StockCode")
                        .HasColumnName("stockCode")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("CDF_Stock");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfTender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BudgetExpenseId")
                        .HasColumnName("budget_expense_id")
                        .HasColumnType("int");

                    b.Property<int?>("BudgetId")
                        .HasColumnName("budget_id")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .HasColumnName("category")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("ClarificationDeadline")
                        .HasColumnName("clarificationDeadline")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ContractNoticeDate")
                        .HasColumnName("contractNoticeDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dateCreated")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Department")
                        .HasColumnName("department")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DueDate")
                        .HasColumnName("dueDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EvaluationMechanism")
                        .HasColumnName("evaluationMechanism")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<DateTime?>("InvitationDate")
                        .HasColumnName("invitationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LongDescription")
                        .HasColumnName("longDescription")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ShortDescription")
                        .HasColumnName("shortDescription")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('Submission')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("SubmissionDeadline")
                        .HasColumnName("submissionDeadline")
                        .HasColumnType("datetime");

                    b.Property<string>("TenderProcedure")
                        .HasColumnName("tenderProcedure")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("TenderProcurementTechnique")
                        .HasColumnName("tenderProcurementTechnique")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("TenderSerial")
                        .HasColumnName("tenderSerial")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Units")
                        .HasColumnName("units")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("CDF_Tender");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfTenderCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnName("category")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Uom")
                        .HasColumnName("uom")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("CDF_TenderCategory");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfTenderProcedure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createdDate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("NumberofBidders")
                        .HasColumnName("numberofBidders")
                        .HasColumnType("int");

                    b.Property<string>("TenderProcedure")
                        .HasColumnName("tenderProcedure")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("CDF_TenderProcedure");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfTenderSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<int?>("SupportingDocumentation")
                        .HasColumnName("supporting_documentation")
                        .HasColumnType("int");

                    b.Property<int?>("TextResponse")
                        .HasColumnName("text_response")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Cdf_TenderSection");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConsituencyId")
                        .HasColumnName("consituency_id")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("createdBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_created")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("DepartmentId")
                        .HasColumnName("department_id")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("EmailConfirmed")
                        .HasColumnName("emailConfirmed")
                        .HasColumnType("int");

                    b.Property<string>("Fname")
                        .HasColumnName("fname")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Lname")
                        .HasColumnName("lname")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<byte[]>("Logo")
                        .HasColumnName("logo")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Password")
                        .HasColumnName("password")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Phone")
                        .HasColumnName("phone")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ProcEntity")
                        .HasColumnName("procEntity")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int?>("RoleId")
                        .HasColumnName("role_id")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnName("status")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Type")
                        .HasColumnName("type")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnName("username")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("CDF_User");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfUser1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConsituencyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CdfUser");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfUserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnName("type")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("CDF_UserType");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfUserType1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CdfUserType");
                });

            modelBuilder.Entity("E_Procurement.Models.CdfUsers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnName("createdBy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dateCreated")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<byte[]>("Logo")
                        .HasColumnName("logo")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("OrganizationId")
                        .HasColumnName("organization_id")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnName("password")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ProcEntity")
                        .HasColumnName("procEntity")
                        .HasColumnType("varchar(300)")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<int?>("RoleId")
                        .HasColumnName("role_id")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnName("username")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("CDF_Users");
                });

            modelBuilder.Entity("E_Procurement.Models.CeecCategory", b =>
                {
                    b.Property<string>("Category")
                        .HasColumnName("category")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.ToTable("CEEC_CATEGORY");
                });

            modelBuilder.Entity("E_Procurement.Models.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.HasKey("CompanyId");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("E_Procurement.Models.CountryNames", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryCode")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CountryName")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("CountryPhoneCode")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(1)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("CountryCode")
                        .IsUnique()
                        .HasName("IX_CountryNames")
                        .HasFilter("[CountryCode] IS NOT NULL");

                    b.ToTable("CountryNames");
                });

            modelBuilder.Entity("E_Procurement.Models.CurrencySymbol", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("code")
                        .HasColumnType("varchar(3)")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnName("country")
                        .HasColumnType("varchar(36)")
                        .HasMaxLength(36)
                        .IsUnicode(false);

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnName("currency")
                        .HasColumnType("varchar(39)")
                        .HasMaxLength(39)
                        .IsUnicode(false);

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnName("symbol")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.HasKey("Id");

                    b.ToTable("Currency_Symbol");
                });

            modelBuilder.Entity("E_Procurement.Models.CurrencySymbol1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CurrencySymbol");
                });

            modelBuilder.Entity("E_Procurement.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DepartmentID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChangedByUser")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("DepartmentCode")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime?>("LastChanged")
                        .HasColumnType("datetime");

                    b.Property<string>("LongDescription")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(1)")
                        .HasDefaultValueSql("('A')")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.HasKey("DepartmentId");

                    b.HasIndex("DepartmentCode")
                        .IsUnique()
                        .HasName("IX_Department");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("E_Procurement.Models.DisciplinaryCases", b =>
                {
                    b.Property<int>("CaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CaseDescription")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("CaseOutcome")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("CaseType")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Category")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateOffenceCommitted")
                        .HasColumnType("date");

                    b.Property<string>("EmployeeCode")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("CaseId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("DisciplinaryCases");
                });

            modelBuilder.Entity("E_Procurement.Models.Document", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BidId")
                        .HasColumnName("bidID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte[]>("FileData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("FileType")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime>("Modified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("SupplierId")
                        .HasColumnName("SupplierID")
                        .HasColumnType("int");

                    b.Property<int?>("TenderId")
                        .HasColumnName("TenderID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Document");
                });

            modelBuilder.Entity("E_Procurement.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EmployeeID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateEngaged")
                        .HasColumnType("datetime");

                    b.Property<int?>("DepartmentId")
                        .HasColumnName("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeCode")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("EmployeeStatusId")
                        .HasColumnName("EmployeeStatusID")
                        .HasColumnType("int");

                    b.Property<int>("EntityId")
                        .HasColumnName("EntityID")
                        .HasColumnType("int");

                    b.Property<int?>("JobGeneralId")
                        .HasColumnName("JobGeneralID")
                        .HasColumnType("int");

                    b.Property<int?>("JobGradeId")
                        .HasColumnName("JobGradeID")
                        .HasColumnType("int");

                    b.Property<int?>("JobTitleId")
                        .HasColumnName("JobTitleID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LeaveStartDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("NatureOfContractId")
                        .HasColumnName("NatureOfContractID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PensionStartDate")
                        .HasColumnType("date");

                    b.Property<int?>("ReportToEmployeeId")
                        .HasColumnName("ReportToEmployeeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TerminationDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("TerminationReasonId")
                        .HasColumnName("TerminationReasonID")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeCode")
                        .IsUnique()
                        .HasName("IX_Employee");

                    b.HasIndex("EmployeeStatusId");

                    b.HasIndex("EntityId")
                        .IsUnique()
                        .HasName("IX_Employee_1");

                    b.HasIndex("JobGeneralId");

                    b.HasIndex("JobGradeId");

                    b.HasIndex("JobTitleId");

                    b.HasIndex("NatureOfContractId");

                    b.HasIndex("TerminationReasonId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("E_Procurement.Models.EmployeeBankDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("AccountNumber")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int>("BankId")
                        .HasColumnType("int");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("IsDefaultBank")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountNumber")
                        .IsUnique()
                        .HasName("IX_EmployeeBankDetails")
                        .HasFilter("[AccountNumber] IS NOT NULL");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeBankDetails");
                });

            modelBuilder.Entity("E_Procurement.Models.EmployeeHistory", b =>
                {
                    b.Property<int>("EmployeeHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateEngaged")
                        .HasColumnType("datetime");

                    b.Property<string>("EmployeeCode")
                        .IsRequired()
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("JobGeneralId")
                        .HasColumnType("int");

                    b.Property<int?>("JobGradeId")
                        .HasColumnType("int");

                    b.Property<int?>("JobTitleId")
                        .HasColumnType("int");

                    b.Property<int?>("NatureOfContractId")
                        .HasColumnType("int");

                    b.Property<string>("PositionCode")
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<DateTime?>("TerminationDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("TerminationReasonId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeHistoryId");

                    b.ToTable("EmployeeHistory");
                });

            modelBuilder.Entity("E_Procurement.Models.EmployeeQualifications", b =>
                {
                    b.Property<int>("FileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("DocumentContent")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("DocumentName")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("DocumentType")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("FieldOfStudy")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("GuId")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("QualificationType")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("FileId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeQualifications");
                });

            modelBuilder.Entity("E_Procurement.Models.EmployeeRemuneration", b =>
                {
                    b.Property<int>("RemunerationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RemunerationID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Reason")
                        .HasColumnType("varchar(80)")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<decimal?>("RemunerationAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("RemunerationId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeRemuneration");
                });

            modelBuilder.Entity("E_Procurement.Models.EmployeeStatus", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StatusID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StatusCode")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("StatusDescription")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("StatusId");

                    b.HasIndex("StatusCode")
                        .IsUnique()
                        .HasName("IX_EmployeeStatus")
                        .HasFilter("[StatusCode] IS NOT NULL");

                    b.ToTable("EmployeeStatus");
                });

            modelBuilder.Entity("E_Procurement.Models.EmployeeTimeSheet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DateApproved")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateWorked")
                        .HasColumnType("date");

                    b.Property<string>("EmployeeCode")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal?>("HoursWorked")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("PeriodEndDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("PeriodStartDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("EmployeeTimeSheet");
                });

            modelBuilder.Entity("E_Procurement.Models.Entity", b =>
                {
                    b.Property<int>("EntityCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountName")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("AccountNumber")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int?>("BankBranchId")
                        .HasColumnName("BankBranchID")
                        .HasColumnType("int");

                    b.Property<int?>("BankId")
                        .HasColumnName("BankID")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CellNumber")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int?>("CountryOfBirthId")
                        .HasColumnName("CountryOfBirthID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<string>("DisplayName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EmailAddress")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("EmployeeStatusId")
                        .HasColumnName("EmployeeStatusID")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Idnumber")
                        .IsRequired()
                        .HasColumnName("IDNumber")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("IdnumberType")
                        .HasColumnName("IDNumberType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastChanged")
                        .HasColumnType("datetime");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("MaidenName")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("MaritalStatusId")
                        .HasColumnName("MaritalStatusID")
                        .HasColumnType("int");

                    b.Property<string>("Nationality")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PhysicalAddress")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("SecondName")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("SocialSecurityNumber")
                        .HasColumnType("int");

                    b.Property<int?>("TitleId")
                        .HasColumnName("TitleID")
                        .HasColumnType("int");

                    b.Property<string>("WorkAddress")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("WorkNumber")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("EntityCode");

                    b.HasIndex("CountryOfBirthId");

                    b.HasIndex("EmployeeStatusId");

                    b.HasIndex("Idnumber")
                        .IsUnique()
                        .HasName("IX_Entity");

                    b.HasIndex("IdnumberType");

                    b.HasIndex("MaritalStatusId");

                    b.HasIndex("TitleId");

                    b.ToTable("Entity");
                });

            modelBuilder.Entity("E_Procurement.Models.ErrorLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateLogged")
                        .HasColumnType("datetime");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("ErrorLog");
                });

            modelBuilder.Entity("E_Procurement.Models.Gender", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nchar(2)")
                        .IsFixedLength(true)
                        .HasMaxLength(2);

                    b.Property<string>("LongDescription")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("GenderId");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasName("IX_Gender")
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("Gender");
                });

            modelBuilder.Entity("E_Procurement.Models.HistoryPayrollRuns", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<int?>("PayPeriod")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HistoryPayrollRuns");
                });

            modelBuilder.Entity("E_Procurement.Models.IdnumberType", b =>
                {
                    b.Property<int>("IdnumberTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IDNumberTypeID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Idcode")
                        .HasColumnName("IDCode")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("LongDescription")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Status")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("IdnumberTypeId");

                    b.HasIndex("Idcode")
                        .IsUnique()
                        .HasName("IX_IDNumberType")
                        .HasFilter("[IDCode] IS NOT NULL");

                    b.ToTable("IDNumberType");
                });

            modelBuilder.Entity("E_Procurement.Models.IncreaseHistory", b =>
                {
                    b.Property<int>("IncreaseHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IncreaseHistoryID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("EffectiveDate")
                        .HasColumnType("datetime");

                    b.Property<int>("EmployeeId")
                        .HasColumnName("EmployeeID")
                        .HasColumnType("int");

                    b.Property<decimal?>("IncreaseAmount")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<string>("IncreaseAppliedOn")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal?>("IncreasePercentage")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime?>("IncreaseProcessedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("IncreaseReasonTypeId")
                        .HasColumnName("IncreaseReasonTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("JobGradeId")
                        .HasColumnName("JobGradeID")
                        .HasColumnType("int");

                    b.Property<int?>("JobTitleId")
                        .HasColumnName("JobTitleID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastChanged")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("NewAnnualSalary")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal?>("NewMonthlySalary")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal?>("NewRatePerDay")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal?>("NewRatePerHour")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal?>("PreviousAnnualSalary")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal?>("PreviousMonthlySalary")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal?>("PreviousRatePerDay")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal?>("PreviousRatePerHour")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<int?>("ProcessedByUserId")
                        .HasColumnName("ProcessedByUserID")
                        .HasColumnType("int");

                    b.HasKey("IncreaseHistoryId");

                    b.ToTable("IncreaseHistory");
                });

            modelBuilder.Entity("E_Procurement.Models.IncreaseReason", b =>
                {
                    b.Property<int>("IncreaseReasonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IncreaseReasonID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime?>("LastChanged")
                        .HasColumnType("datetime");

                    b.Property<string>("LongDescription")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("ShortDescription")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Status")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("IncreaseReasonId");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasName("IX_IncreaseReason")
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("IncreaseReason");
                });

            modelBuilder.Entity("E_Procurement.Models.JobGeneral", b =>
                {
                    b.Property<int>("JobGeneralId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("JobGeneralID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LongDescription")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Status")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("JobGeneralId");

                    b.ToTable("JobGeneral");
                });

            modelBuilder.Entity("E_Procurement.Models.JobGrade", b =>
                {
                    b.Property<int>("JobGradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("JobGradeID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("JobGradeCode")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("JobGradeDescription")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Status")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("JobGradeId");

                    b.HasIndex("JobGradeCode")
                        .IsUnique()
                        .HasName("IX_JobGrade")
                        .HasFilter("[JobGradeCode] IS NOT NULL");

                    b.ToTable("JobGrade");
                });

            modelBuilder.Entity("E_Procurement.Models.JobTitle", b =>
                {
                    b.Property<int>("JobTitleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChangedByUser")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("JobGradeId")
                        .HasColumnType("int");

                    b.Property<string>("Jobcode")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime?>("LastChanged")
                        .HasColumnType("datetime");

                    b.Property<string>("LongDescription")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ShortDescription")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Status")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("JobTitleId");

                    b.HasIndex("JobGradeId");

                    b.HasIndex("Jobcode")
                        .IsUnique()
                        .HasName("IX_JobTitle");

                    b.ToTable("JobTitle");
                });

            modelBuilder.Entity("E_Procurement.Models.LeaveDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LeaveAccrualStartDate")
                        .HasColumnType("date");

                    b.Property<decimal?>("LeaveBalance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("LeaveTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MonetaryEquivalent")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("LeaveDetail");
                });

            modelBuilder.Entity("E_Procurement.Models.LeaveTransactions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DateApplied")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateApproved")
                        .HasColumnType("date");

                    b.Property<string>("EmployeeCode")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Guid")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("LeaveEndDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("LeaveStartDate")
                        .HasColumnType("date");

                    b.Property<int?>("LeaveTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<int?>("UnitsTaken")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LeaveTransactions");
                });

            modelBuilder.Entity("E_Procurement.Models.LeaveTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicableGender")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("BalanceBroughtForwardOption")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Cycle")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("date");

                    b.Property<int>("Entitlement")
                        .HasColumnType("int");

                    b.Property<string>("LeaveTypeDescription")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasName("IX_LeaveTypes");

                    b.ToTable("LeaveTypes");
                });

            modelBuilder.Entity("E_Procurement.Models.MaritalStatus", b =>
                {
                    b.Property<int>("MaritalStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LongDescription")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Status")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("MaritalStatusId");

                    b.ToTable("MaritalStatus");
                });

            modelBuilder.Entity("E_Procurement.Models.NapsaConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<decimal>("MaximumCeiling")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.Property<decimal>("Percentage")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("NapsaConfiguration");
                });

            modelBuilder.Entity("E_Procurement.Models.NatureOfContract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContractTypeCode")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("ContractTypeDecsription")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Status")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("ContractTypeCode")
                        .IsUnique()
                        .HasName("IX_NatureOfContract")
                        .HasFilter("[ContractTypeCode] IS NOT NULL");

                    b.ToTable("NatureOfContract");
                });

            modelBuilder.Entity("E_Procurement.Models.NhimaConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Percentage")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("NhimaConfiguration");
                });

            modelBuilder.Entity("E_Procurement.Models.PayrollDeductionDef", b =>
                {
                    b.Property<int>("DefId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DefID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime");

                    b.Property<string>("DeductionCode")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("DeductionDecsription")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Formula")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("LineFlag")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Status")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("DefId");

                    b.HasIndex("DeductionCode")
                        .IsUnique()
                        .HasName("IX_PayrollDeductionDef")
                        .HasFilter("[DeductionCode] IS NOT NULL");

                    b.ToTable("PayrollDeductionDef");
                });

            modelBuilder.Entity("E_Procurement.Models.PayrollEarningDef", b =>
                {
                    b.Property<int>("DefId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DefID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime");

                    b.Property<string>("EarningLineCode")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("EarningLineDescription")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Formula")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("LineFlag")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Status")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("DefId");

                    b.HasIndex("EarningLineCode")
                        .IsUnique()
                        .HasName("IX_PayrollEarningDef")
                        .HasFilter("[EarningLineCode] IS NOT NULL");

                    b.ToTable("PayrollEarningDef");
                });

            modelBuilder.Entity("E_Procurement.Models.PayrollLinesFrequecyCodes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Description")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasName("IX_PayrollLinesFrequecyCodes");

                    b.ToTable("PayrollLinesFrequecyCodes");
                });

            modelBuilder.Entity("E_Procurement.Models.PayslipDefinition", b =>
                {
                    b.Property<int>("PayslipDefId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("OccurenceCode")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("PayPeriod")
                        .HasColumnType("int");

                    b.Property<string>("PayrollDefinitionCode")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("PayrollDefinitionFlag")
                        .HasColumnType("int");

                    b.Property<DateTime>("PeriodEndDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("PeriodStartDate")
                        .HasColumnType("date");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("UserId")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("PayslipDefId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("OccurenceCode");

                    b.ToTable("PayslipDefinition");
                });

            modelBuilder.Entity("E_Procurement.Models.PayslipDetail", b =>
                {
                    b.Property<int>("PayslipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("DeductionAmount")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<int?>("DeductionDefId")
                        .HasColumnType("int");

                    b.Property<decimal?>("EarningAmount")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<int?>("EarningDefId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("LineFlag")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PayPeriod")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("PayslipId");

                    b.ToTable("PayslipDetail");
                });

            modelBuilder.Entity("E_Procurement.Models.PayslipDetailArchive", b =>
                {
                    b.Property<int>("PayslipArchiveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PayslipArchiveID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("DeductionAmount")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<int?>("DeductionDefId")
                        .HasColumnName("DeductionDefID")
                        .HasColumnType("int");

                    b.Property<decimal?>("EarningAmount")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<int?>("EarningDefId")
                        .HasColumnName("EarningDefID")
                        .HasColumnType("int");

                    b.Property<int?>("EmpoyeeId")
                        .HasColumnName("EmpoyeeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExportDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ExportedByUserId")
                        .HasColumnName("ExportedByUserID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PayPeriod")
                        .HasColumnType("datetime");

                    b.HasKey("PayslipArchiveId");

                    b.ToTable("PayslipDetailArchive");
                });

            modelBuilder.Entity("E_Procurement.Models.PositionDetails", b =>
                {
                    b.Property<int>("PositionCodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeCode")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("JobTitleCode")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("LongDescription")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("PositionCode")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("ReportsToPositionCode")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ShortDescription")
                        .HasColumnType("varchar(25)")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime?>("VacancyDate")
                        .HasColumnType("datetime");

                    b.HasKey("PositionCodeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("JobTitleCode");

                    b.HasIndex("PositionCode")
                        .IsUnique()
                        .HasName("IX_PositionDetails");

                    b.ToTable("PositionDetails");
                });

            modelBuilder.Entity("E_Procurement.Models.PromotionHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("EmployeeCode")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("NewPositionCode")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("OldPositionCode")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime>("PromotionDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("PromotionHistory");
                });

            modelBuilder.Entity("E_Procurement.Models.Reference", b =>
                {
                    b.Property<int?>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("int");

                    b.Property<string>("Reference1")
                        .HasColumnName("reference")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.ToTable("reference");
                });

            modelBuilder.Entity("E_Procurement.Models.StatusDescription", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StatusID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StatusCode")
                        .HasColumnType("varchar(2)")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("StausDescription")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("StatusId")
                        .HasName("PK_GeneralStatusDescription");

                    b.HasIndex("StatusId")
                        .IsUnique()
                        .HasName("IX_GeneralStatusDescription");

                    b.ToTable("StatusDescription");
                });

            modelBuilder.Entity("E_Procurement.Models.SupplierRegAttachment", b =>
                {
                    b.Property<string>("Attachment")
                        .HasColumnName("attachment")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("AttachmentType")
                        .HasColumnName("attachmentType")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.ToTable("Supplier_RegAttachment");
                });

            modelBuilder.Entity("E_Procurement.Models.SupplierRegistation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyRegistrationNumber")
                        .HasColumnName("companyRegistrationNumber")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CompanyStatusNapsa")
                        .HasColumnName("companyStatusNapsa")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CompanyStatusZra")
                        .HasColumnName("companyStatusZRA")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ConfirmationCode")
                        .HasColumnName("confirmationCode")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Country")
                        .HasColumnName("country")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CountryOfRegistration")
                        .HasColumnName("countryOfRegistration")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("OrganizationName")
                        .HasColumnName("organizationName")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("OrganizationType")
                        .HasColumnName("organizationType")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("Phone")
                        .HasColumnName("phone")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Shareholders")
                        .HasColumnName("shareholders")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("SupplierRegistrationCode")
                        .HasColumnName("supplierRegistrationCode")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Tpin")
                        .HasColumnName("TPIN")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("SupplierRegistation");
                });

            modelBuilder.Entity("E_Procurement.Models.TaxTableDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("BandDescription")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<decimal?>("LowerLimit")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Percentage")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<decimal?>("UperLimit")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("TaxTableDefinition");
                });

            modelBuilder.Entity("E_Procurement.Models.TerminationReason", b =>
                {
                    b.Property<int>("TerminationReasonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(8)")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(2)")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.HasKey("TerminationReasonId");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasName("IX_TerminationReason");

                    b.ToTable("TerminationReason");
                });

            modelBuilder.Entity("E_Procurement.Models.TitleDescription", b =>
                {
                    b.Property<int>("TitleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TitleDescription1")
                        .HasColumnName("TitleDescription")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("TitleId");

                    b.ToTable("TitleDescription");
                });

            modelBuilder.Entity("E_Procurement.Models.UserAuditLogs", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AuditID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("ActionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ActionType")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("FieldName")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Guid")
                        .HasColumnName("GUID")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("NewValue")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("OldValue")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("AuditId");

                    b.ToTable("UserAuditLogs");
                });

            modelBuilder.Entity("E_Procurement.Models.UserDetail", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("EmployeId")
                        .HasColumnType("int");

                    b.Property<int?>("FailedLoginAttempts")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastLogon")
                        .HasColumnType("datetime");

                    b.Property<int?>("OrganizationId")
                        .HasColumnName("organization_id")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("ProfileStatus")
                        .HasColumnType("int");

                    b.Property<int?>("UserRoleId")
                        .HasColumnName("UserRoleID")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("UserId");

                    b.HasIndex("EmployeId")
                        .IsUnique()
                        .HasName("IX_UserDetail")
                        .HasFilter("[EmployeId] IS NOT NULL");

                    b.HasIndex("ProfileStatus");

                    b.HasIndex("UserRoleId");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasName("IX_UserDetail_1")
                        .HasFilter("[Username] IS NOT NULL");

                    b.ToTable("UserDetail");
                });

            modelBuilder.Entity("E_Procurement.Models.UserMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MenuDescription")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("UserMenu");
                });

            modelBuilder.Entity("E_Procurement.Models.UserMenuMapping", b =>
                {
                    b.Property<int>("UserMenuMappingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserMenuMappingID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("UserMenuId")
                        .HasColumnName("UserMenuID")
                        .HasColumnType("int");

                    b.Property<int?>("UserRoleId")
                        .HasColumnName("UserRoleID")
                        .HasColumnType("int");

                    b.HasKey("UserMenuMappingId");

                    b.HasIndex("UserMenuId");

                    b.HasIndex("UserRoleId");

                    b.ToTable("UserMenuMapping");
                });

            modelBuilder.Entity("E_Procurement.Models.UserPasswordResets", b =>
                {
                    b.Property<int>("ResetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ResetID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ResetDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ResetToken")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("TokenStatusId")
                        .HasColumnName("TokenStatusID")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("ResetId");

                    b.HasIndex("ResetId")
                        .HasName("IX_UserPasswordResets_1");

                    b.HasIndex("UserId");

                    b.ToTable("UserPasswordResets");
                });

            modelBuilder.Entity("E_Procurement.Models.UserRoles", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserRoleID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleDescription")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("UserRoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("E_Procurement.Models.UserStatus", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StatusID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StatusDescription")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("StatusId");

                    b.ToTable("UserStatus");
                });

            modelBuilder.Entity("E_Procurement.Models.AspNetRoleClaims", b =>
                {
                    b.HasOne("E_Procurement.Models.AspNetRoles", "Role")
                        .WithMany("AspNetRoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_Procurement.Models.AspNetUserClaims", b =>
                {
                    b.HasOne("E_Procurement.Models.AspNetUsers", "User")
                        .WithMany("AspNetUserClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_Procurement.Models.AspNetUserLogins", b =>
                {
                    b.HasOne("E_Procurement.Models.AspNetUsers", "User")
                        .WithMany("AspNetUserLogins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_Procurement.Models.AspNetUserRoles", b =>
                {
                    b.HasOne("E_Procurement.Models.AspNetRoles", "Role")
                        .WithMany("AspNetUserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Procurement.Models.AspNetUsers", "User")
                        .WithMany("AspNetUserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_Procurement.Models.AspNetUserTokens", b =>
                {
                    b.HasOne("E_Procurement.Models.AspNetUsers", "User")
                        .WithMany("AspNetUserTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_Procurement.Models.BankBranch", b =>
                {
                    b.HasOne("E_Procurement.Models.Bank", "Bank")
                        .WithMany("BankBranch")
                        .HasForeignKey("BankId")
                        .HasConstraintName("FK_BankBranch_Bank")
                        .IsRequired();
                });

            modelBuilder.Entity("E_Procurement.Models.DisciplinaryCases", b =>
                {
                    b.HasOne("E_Procurement.Models.Employee", "Employee")
                        .WithMany("DisciplinaryCases")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_DisciplinaryCases_Employee")
                        .IsRequired();
                });

            modelBuilder.Entity("E_Procurement.Models.Employee", b =>
                {
                    b.HasOne("E_Procurement.Models.Department", "Department")
                        .WithMany("Employee")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_Employee_Department");

                    b.HasOne("E_Procurement.Models.EmployeeStatus", "EmployeeStatus")
                        .WithMany("Employee")
                        .HasForeignKey("EmployeeStatusId")
                        .HasConstraintName("FK_Employee_EmployeeStatus");

                    b.HasOne("E_Procurement.Models.Entity", "Entity")
                        .WithOne("Employee")
                        .HasForeignKey("E_Procurement.Models.Employee", "EntityId")
                        .HasConstraintName("FK_Employee_Entity")
                        .IsRequired();

                    b.HasOne("E_Procurement.Models.JobGeneral", "JobGeneral")
                        .WithMany("Employee")
                        .HasForeignKey("JobGeneralId")
                        .HasConstraintName("FK_Employee_JobGeneral");

                    b.HasOne("E_Procurement.Models.JobGrade", "JobGrade")
                        .WithMany("Employee")
                        .HasForeignKey("JobGradeId")
                        .HasConstraintName("FK_Employee_JobGrade");

                    b.HasOne("E_Procurement.Models.JobTitle", "JobTitle")
                        .WithMany("Employee")
                        .HasForeignKey("JobTitleId")
                        .HasConstraintName("FK_Employee_JobTitle");

                    b.HasOne("E_Procurement.Models.NatureOfContract", "NatureOfContract")
                        .WithMany("Employee")
                        .HasForeignKey("NatureOfContractId")
                        .HasConstraintName("FK_Employee_NatureOfContract");

                    b.HasOne("E_Procurement.Models.TerminationReason", "TerminationReason")
                        .WithMany("Employee")
                        .HasForeignKey("TerminationReasonId")
                        .HasConstraintName("FK_Employee_TerminationReason");
                });

            modelBuilder.Entity("E_Procurement.Models.EmployeeBankDetails", b =>
                {
                    b.HasOne("E_Procurement.Models.Employee", "Employee")
                        .WithMany("EmployeeBankDetails")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_EmployeeBankDetails_Employee")
                        .IsRequired();
                });

            modelBuilder.Entity("E_Procurement.Models.EmployeeQualifications", b =>
                {
                    b.HasOne("E_Procurement.Models.Employee", "Employee")
                        .WithMany("EmployeeQualifications")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_EmployeeQualifications_Employee");
                });

            modelBuilder.Entity("E_Procurement.Models.EmployeeRemuneration", b =>
                {
                    b.HasOne("E_Procurement.Models.Employee", "Employee")
                        .WithMany("EmployeeRemuneration")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_EmployeeRemuneration_Employee")
                        .IsRequired();
                });

            modelBuilder.Entity("E_Procurement.Models.Entity", b =>
                {
                    b.HasOne("E_Procurement.Models.CountryNames", "CountryOfBirth")
                        .WithMany("Entity")
                        .HasForeignKey("CountryOfBirthId")
                        .HasConstraintName("FK_Entity_CountryNames");

                    b.HasOne("E_Procurement.Models.EmployeeStatus", "EmployeeStatus")
                        .WithMany("Entity")
                        .HasForeignKey("EmployeeStatusId")
                        .HasConstraintName("FK_Entity_EmployeeStatus");

                    b.HasOne("E_Procurement.Models.IdnumberType", "IdnumberTypeNavigation")
                        .WithMany("Entity")
                        .HasForeignKey("IdnumberType")
                        .HasConstraintName("FK_Entity_IDNumberType");

                    b.HasOne("E_Procurement.Models.MaritalStatus", "MaritalStatus")
                        .WithMany("Entity")
                        .HasForeignKey("MaritalStatusId")
                        .HasConstraintName("FK_Entity_MaritalStatus");

                    b.HasOne("E_Procurement.Models.TitleDescription", "Title")
                        .WithMany("Entity")
                        .HasForeignKey("TitleId")
                        .HasConstraintName("FK_Entity_TitleDescription");
                });

            modelBuilder.Entity("E_Procurement.Models.JobTitle", b =>
                {
                    b.HasOne("E_Procurement.Models.JobGrade", "JobGrade")
                        .WithMany("JobTitle")
                        .HasForeignKey("JobGradeId")
                        .HasConstraintName("FK_JobTitle_JobGrade");
                });

            modelBuilder.Entity("E_Procurement.Models.LeaveDetail", b =>
                {
                    b.HasOne("E_Procurement.Models.Employee", "Employee")
                        .WithMany("LeaveDetail")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_LeaveDetail_Employee")
                        .IsRequired();
                });

            modelBuilder.Entity("E_Procurement.Models.PayslipDefinition", b =>
                {
                    b.HasOne("E_Procurement.Models.Employee", "Employee")
                        .WithMany("PayslipDefinition")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_PayslipDefinition_Employee")
                        .IsRequired();

                    b.HasOne("E_Procurement.Models.PayrollLinesFrequecyCodes", "OccurenceCodeNavigation")
                        .WithMany("PayslipDefinition")
                        .HasForeignKey("OccurenceCode")
                        .HasConstraintName("FK_PayslipDefinition_PayrollLinesFrequecyCodes")
                        .HasPrincipalKey("Code");
                });

            modelBuilder.Entity("E_Procurement.Models.PositionDetails", b =>
                {
                    b.HasOne("E_Procurement.Models.Department", "Department")
                        .WithMany("PositionDetails")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_PositionDetails_Department")
                        .IsRequired();

                    b.HasOne("E_Procurement.Models.JobTitle", "JobTitleCodeNavigation")
                        .WithMany("PositionDetails")
                        .HasForeignKey("JobTitleCode")
                        .HasConstraintName("FK_PositionDetails_JobTitle")
                        .HasPrincipalKey("Jobcode")
                        .IsRequired();
                });

            modelBuilder.Entity("E_Procurement.Models.UserDetail", b =>
                {
                    b.HasOne("E_Procurement.Models.UserStatus", "ProfileStatusNavigation")
                        .WithMany("UserDetail")
                        .HasForeignKey("ProfileStatus")
                        .HasConstraintName("FK_UserDetail_UserStatus");

                    b.HasOne("E_Procurement.Models.UserRoles", "UserRole")
                        .WithMany("UserDetail")
                        .HasForeignKey("UserRoleId")
                        .HasConstraintName("FK_UserDetail_UserRoles");
                });

            modelBuilder.Entity("E_Procurement.Models.UserMenuMapping", b =>
                {
                    b.HasOne("E_Procurement.Models.UserMenu", "UserMenu")
                        .WithMany("UserMenuMapping")
                        .HasForeignKey("UserMenuId")
                        .HasConstraintName("FK_UserMenuMapping_UserMenu");

                    b.HasOne("E_Procurement.Models.UserRoles", "UserRole")
                        .WithMany("UserMenuMapping")
                        .HasForeignKey("UserRoleId")
                        .HasConstraintName("FK_UserMenuMapping_UserRoles");
                });

            modelBuilder.Entity("E_Procurement.Models.UserPasswordResets", b =>
                {
                    b.HasOne("E_Procurement.Models.UserDetail", "User")
                        .WithMany("UserPasswordResets")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserPasswordResets_UserDetail");
                });
#pragma warning restore 612, 618
        }
    }
}
