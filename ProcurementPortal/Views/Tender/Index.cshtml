@{
    ViewBag.Title = "Form Builder";
}
<link type="text/css" rel="stylesheet" href="~/assets/css/form.builder.css" />
<link type="text/css" rel="stylesheet" href="~/assets/fontawesome/css/font-awesome.min.css" />
<style>
    .btn.btn-primary:hover:not(.btn-text):not(:disabled):not(.disabled), .btn.btn-primary:focus:not(.btn-text), .btn.btn-primary.focus:not(.btn-text) {
        color: #fff;
        background-color: #2780e3;
        border-color: #2780e3;
    }
</style>

<div class="container-fluid">
    <div class="row">
        <div class="col-sm-8">
            <div id="builder">
                <div class="formio builder row formbuilder">
                    <div class="col-xs-4 col-sm-3 col-md-2 formcomponents">
                        <div ref="sidebar" class="accordion builder-sidebar builder-sidebar_scroll" id="builder-sidebar-e07ngsi">
                            <input placeholder="Search field(s)" ref="sidebar-search" type="search" class="form-control builder-sidebar_search">
                            <div ref="sidebar-groups">

                                <partial name="_FormBuilderControls.cshtml"/>

                            </div>
                        </div>

                    </div>
                    <div ref="form" class="col-xs-8 col-sm-9 col-md-10 formarea">
                        <div ref="component" class="formio-component   formio-component-label-hidden" id="e0490mv">


                            <div novalidate="" ref="webform" class="formio-form">
                                <div ref="-container" class="builder-components drag-container formio-builder-form">
                                    <div data-position="0" data-noattach="true" role="alert" style="text-align:center;" class="drag-and-drop-alert alert alert-info no-drag">
                                        Drag and Drop a form component
                                    </div>
                                    <div ref="dragComponent" class="builder-component">

                                        <div data-noattach="true" class="component-btn-group">
                                            <div ref="removeComponent" class="btn btn-xxs btn-danger component-settings-button component-settings-button-remove" tabindex="-1" aria-label="Remove button. Click to remove component from the form" role="button">
                                                <i class="fa fa-remove"></i>
                                            </div>
                                            <div ref="copyComponent" class="btn btn-xxs btn-default component-settings-button component-settings-button-copy" tabindex="-1" aria-label="Copy button. Click to copy component" role="button">
                                                <i class="fa fa-copy"></i>
                                            </div>
                                            <div ref="pasteComponent" class="btn btn-xxs btn-default component-settings-button component-settings-button-paste" tabindex="-1" aria-label="Paste below button. Click to paste component below the current component" role="button">
                                                <i class="fa fa-download"></i>
                                            </div>
                                            <div ref="editJson" class="btn btn-xxs btn-default component-settings-button component-settings-button-edit-json" tabindex="-1" aria-label="Edit json button. Click to edit json of the current component" role="button">
                                                <i class="fa fa-wrench"></i>
                                            </div>
                                            <div ref="moveComponent" class="btn btn-xxs btn-default component-settings-button component-settings-button-move" tabindex="-1" aria-label="Move button" role="button">
                                                <i class="fa fa-arrows"></i>
                                            </div>
                                            <div ref="editComponent" class="btn btn-xxs btn-secondary component-settings-button component-settings-button-edit" tabindex="-1" aria-label="Edit button. Click to open component settings modal window" role="button">
                                                <i class="fa fa-cog"></i>
                                            </div>
                                        </div>

                                        <div ref="component" class="form-group has-feedback formio-component formio-component-button formio-component-submit  form-group" id="ekmjldb">


                                            <button lang="en" class="btn btn-primary btn-md" type="submit" name="data[submit]" ref="button">

                                                Submit


                                            </button>
                                            <div ref="buttonMessageContainer">
                                                <span ref="buttonMessage" class="help-block"></span>
                                            </div>


                                            <div class="formio-errors invalid-feedback" ref="messageContainer"></div>

                                        </div>

                                    </div>


                                </div>
                            </div>


                            <div class="formio-errors invalid-feedback" ref="messageContainer"></div>

                        </div>

                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="card card-body bg-light jsonviewer">
                <pre id="json"></pre>
            </div>
        </div>
    </div>

    <!---To be removed--->
    <div class="row mt-4 d-none">
        <div class="col-sm-8 offset-sm-2">
            <h3 class="text-center text-muted">which 
                <a href="https://github.com/formio/ngFormio" target="_blank">
                    Renders as a Form</a> in your Application</h3>
            <div id="formio" class="card card-body bg-light"></div>
        </div>
        <div class="clearfix"></div>
    </div>
    <div class="row mt-4 d-none">
        <div class="col-sm-8 offset-sm-2">
            <h3 class="text-center text-muted">which creates a Submission JSON</h3>
            <div class="card card-body bg-light jsonviewer">
                <pre id="subjson"></pre>
            </div>
        </div>
        <div class="clearfix"></div>
    </div>
</div>


@section Scripts{
<script src='~/assets/js/formiojs/formio.full.min.js'></script>
<script type='text/javascript'>
    window.onload = function() {
      Formio.builder(document.getElementById('builder'), {}, {});
    };
</script>

    <script type="text/javascript">
        var jsonElement = document.getElementById('json');
        var formElement = document.getElementById('formio');
        var subJSON = document.getElementById('subjson');
        var builder = new Formio.FormBuilder(document.getElementById("builder"), {
          display: 'form',
          components: [],
          settings: {
            pdf: {
              "id": "1ec0f8ee-6685-5d98-a847-26f67b67d6f0",
              "src": "https://files.form.io/pdf/5692b91fd1028f01000407e3/file/1ec0f8ee-6685-5d98-a847-26f67b67d6f0"
            }
          }
        }, {
          baseUrl: 'https://examples.form.io'
        });

        var onForm = function(form) {
          form.on('change', function() {
            subJSON.innerHTML = '';
            subJSON.appendChild(document.createTextNode(JSON.stringify(form.submission, null, 4)));
          });
        };

        var onBuild = function(build) {
          jsonElement.innerHTML = '';
          formElement.innerHTML = '';
          jsonElement.appendChild(document.createTextNode(JSON.stringify(builder.instance.schema, null, 4)));
          Formio.createForm(formElement, builder.instance.form).then(onForm);
        };

        var onReady = function() {
          var jsonElement = document.getElementById('json');
          var formElement = document.getElementById('formio');
          builder.instance.on('change', onBuild);
        };

        var setDisplay = function(display) {
          builder.setDisplay(display).then(onReady);
        };

        // Handle the form selection.
        var formSelect = document.getElementById('form-select');
        formSelect.addEventListener("change", function() {
          setDisplay(this.value);
        });

        builder.instance.ready.then(onReady);
    </script>
}